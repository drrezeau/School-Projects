                      | # David Lambertson
                      | # Execution begins at address 0
  0x200:              | .pos 0x200
  0x200:              | Stack:
                      | 
  0x000:              | .pos 0
  0x000: 308400020000 | init: irmovl Stack, %esp #Set up Stack pointer
  0x006: 308500020000 |       irmovl Stack, %ebp #set up frame pointer
  0x00c: 702c000000   |       jmp    Main        #execute Main
                      | 
                      | 
                      | # Sample linked list 
  0x014:              | .align 4 
  0x014:              | ele1: 
  0x014: 0a000000     |       .long 0x00a 
  0x018: 1c000000     |       .long ele2 
  0x01c:              | ele2: 
  0x01c: b0000000     |       .long 0x0b0 
  0x020: 24000000     |       .long ele3 
  0x024:              | ele3: 
  0x024: 000c0000     |       .long 0xc00 
  0x028: 00000000     |       .long 0 
                      | 
                      | #Main -- gets the linked list and calls Sum_List
  0x02c: 308014000000 | Main: irmovl ele1, %eax
  0x032: a008         |       pushl %eax            # Puts the linked list on the stack   
  0x034: 803a000000   |       call R_Sum_List         #Calls Recursive_Sum_List(ele1)
  0x039: 10           |       halt                  #Halts the program
                      | 
                      | #Recursive_Sum_List(list-ptr list)
                      | #Recursively sums all the values of a linked list
  0x03a:              | R_Sum_List:  
  0x03a: a058         |              pushl %ebp             #Saves the frame pointer
  0x03c: 2045         |              rrmovl %esp, %ebp      #Moves out frame pointer to our stack pointer
                      | 
  0x03e: a038         |              pushl %ebx
                      |              
  0x040: 501508000000 |              mrmovl 8(%ebp), %ecx   #Grabs our linked list
  0x046: 308000000000 |              irmovl $0, %eax        # sets eax to 0
                      |              
                      | 
  0x04c: 6211         |              andl %ecx, %ecx        #checks if we are at the end
  0x04e: 7368000000   |              je End
                      | 
  0x053: 503100000000 |              mrmovl (%ecx), %ebx       #saves the value in a register
  0x059: 501104000000 |              mrmovl 4(%ecx), %ecx      #moves to the next item
                      |              
  0x05f: a018         |              pushl %ecx                 #saves our next address on the Stack
  0x061: 803a000000   |              call R_Sum_List           #Calls our function again
  0x066: 6030         |              addl %ebx, %eax           #adds the value to eax
                      |             
  0x068:              | End:
  0x068: 308204000000 |              irmovl $4, %edx           #Sets edx to 4
  0x06e: 6125         |              subl %edx, %ebp           #Moves our ebp down 4 to point where our ebx is
  0x070: 2054         |              rrmovl %ebp, %esp         #restore the stack pointer
  0x072: b038         |              popl %ebx                 #Grabs our saved ebx
  0x074: b058         |              popl %ebp                 #restore the frame pointer
  0x076: 90           |              ret                       #return to Main
