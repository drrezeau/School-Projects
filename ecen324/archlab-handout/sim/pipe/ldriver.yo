                      | #######################################################################
                      | # Test for copying block of size 63;
                      | #######################################################################
  0x000:              | 	.pos 0
  0x000: 3084b8020000 | main:	irmovl Stack, %esp  	# Set up stack pointer
  0x006: 3085b8020000 | 	irmovl Stack, %ebp  	# Set up base pointer
                      | 
                      | 	# Set up arguments for copy function and then invoke it
  0x00c: 30803f000000 | 	irmovl 63, %eax		# src and dst have 63 elements
  0x012: a008         | 	pushl %eax
  0x014: 308090010000 | 	irmovl dest, %eax	# dst array
  0x01a: a008         | 	pushl %eax
  0x01c: 308080000000 | 	irmovl src, %eax	# src array
  0x022: a008         | 	pushl %eax
  0x024: 802a000000   | 	call ncopy		 
  0x029: 10           | 	halt			# should halt with num nonzeros in %eax
                      | #David Lambertson 072895657
                      | #/* $begin ncopy-ys */
                      | ##################################################################
                      | # ncopy.ys - Copy a src block of len ints to dst.
                      | # Return the number of positive ints (>0) contained in src.
                      | #
                      | # Include your name and ID here.
                      | #
                      | # Describe how and why you modified the baseline code.
                      | #
                      | ##################################################################
                      | 	# Function prologue. Do not modify saving/setting %ebp.
  0x02a: a058         | ncopy:	pushl  %ebp		# Save old frame pointer
  0x02c: 2045         | 	rrmovl %esp,%ebp	# Set up new frame pointer
  0x02e: 503508000000 | 	mrmovl 8(%ebp),%ebx	# src
  0x034: 50150c000000 | 	mrmovl 12(%ebp),%ecx	# dst
  0x03a: 502510000000 | 	mrmovl 16(%ebp),%edx	# len
                      | 
                      | 	# Loop header
  0x040: 6366         | 	xorl   %esi,%esi	# count = 0;
                      | 
                      | 	# Loop body.
  0x042: 500300000000 | Loop:	mrmovl (%ebx), %eax	# read val from src...
  0x048: c08304000000 |         iaddl   $4, %ebx	# src++
  0x04e: 400100000000 | 	rmmovl %eax, (%ecx)	# ...and store it to dst
  0x054: c08104000000 | 	iaddl   $4, %ecx	# dst++
  0x05a: 6200         | 	andl   %eax, %eax	# val <= 0?
  0x05c: 7666000000   |         jg     Count            #jumps to count
  0x061: 706c000000   | 	jmp    Npos		# if so, goto Npos:
  0x066: c08601000000 | Count:	iaddl   $1, %esi	# count++
  0x06c: 308701000000 | Npos:	irmovl $1, %edi
  0x072: 6172         | 	subl   %edi, %edx	# len--
  0x074: 7642000000   | 	jg     Loop		# if so, goto Loop:
                      | 
  0x079: 2060         | Done:	rrmovl %esi, %eax
                      | 	# Function epilogue. Do not modify unless you implement 'leave'.
  0x07b: d0           |         leave
  0x07c: 90           |         ret
                      | #/* $end ncopy-ys */
                      | #################################################################### 
                      | # Epilogue code for the correctness testing driver
                      | ####################################################################
                      | 
                      | ###############################
                      | # Source and destination blocks 
                      | ###############################
  0x080:              | 	.align 4
  0x080: 00000000     | src:	.long 0
  0x084: 01000000     | 	.long 1
  0x088: 02000000     | 	.long 2
  0x08c: 03000000     | 	.long 3
  0x090: 04000000     | 	.long 4
  0x094: 05000000     | 	.long 5
  0x098: 06000000     | 	.long 6
  0x09c: 07000000     | 	.long 7
  0x0a0: 08000000     | 	.long 8
  0x0a4: 09000000     | 	.long 9
  0x0a8: 0a000000     | 	.long 10
  0x0ac: 0b000000     | 	.long 11
  0x0b0: 0c000000     | 	.long 12
  0x0b4: 0d000000     | 	.long 13
  0x0b8: 0e000000     | 	.long 14
  0x0bc: 0f000000     | 	.long 15
  0x0c0: 10000000     | 	.long 16
  0x0c4: 11000000     | 	.long 17
  0x0c8: 12000000     | 	.long 18
  0x0cc: 13000000     | 	.long 19
  0x0d0: 14000000     | 	.long 20
  0x0d4: 15000000     | 	.long 21
  0x0d8: 16000000     | 	.long 22
  0x0dc: 17000000     | 	.long 23
  0x0e0: 18000000     | 	.long 24
  0x0e4: 19000000     | 	.long 25
  0x0e8: 1a000000     | 	.long 26
  0x0ec: 1b000000     | 	.long 27
  0x0f0: 1c000000     | 	.long 28
  0x0f4: 1d000000     | 	.long 29
  0x0f8: 1e000000     | 	.long 30
  0x0fc: 1f000000     | 	.long 31
  0x100: 20000000     | 	.long 32
  0x104: 21000000     | 	.long 33
  0x108: 22000000     | 	.long 34
  0x10c: 23000000     | 	.long 35
  0x110: 24000000     | 	.long 36
  0x114: 25000000     | 	.long 37
  0x118: 26000000     | 	.long 38
  0x11c: 27000000     | 	.long 39
  0x120: 28000000     | 	.long 40
  0x124: 29000000     | 	.long 41
  0x128: 2a000000     | 	.long 42
  0x12c: 2b000000     | 	.long 43
  0x130: 2c000000     | 	.long 44
  0x134: 2d000000     | 	.long 45
  0x138: 2e000000     | 	.long 46
  0x13c: 2f000000     | 	.long 47
  0x140: 30000000     | 	.long 48
  0x144: 31000000     | 	.long 49
  0x148: 32000000     | 	.long 50
  0x14c: 33000000     | 	.long 51
  0x150: 34000000     | 	.long 52
  0x154: 35000000     | 	.long 53
  0x158: 36000000     | 	.long 54
  0x15c: 37000000     | 	.long 55
  0x160: 38000000     | 	.long 56
  0x164: 39000000     | 	.long 57
  0x168: 3a000000     | 	.long 58
  0x16c: 3b000000     | 	.long 59
  0x170: 3c000000     | 	.long 60
  0x174: 3d000000     | 	.long 61
  0x178: 3e000000     | 	.long 62
  0x17c: 3f000000     | 	.long 63
  0x180: 0f0f0f0f     |         .long 0x0f0f0f0f # This shouldn't get moved
                      | 
  0x190:              | 	.align 16
  0x190: efbe0000     | dest:	.long 0xbeef
  0x194: efbe0000     | 	.long 0xbeef
  0x198: efbe0000     | 	.long 0xbeef
  0x19c: efbe0000     | 	.long 0xbeef
  0x1a0: efbe0000     | 	.long 0xbeef
  0x1a4: efbe0000     | 	.long 0xbeef
  0x1a8: efbe0000     | 	.long 0xbeef
  0x1ac: efbe0000     | 	.long 0xbeef
  0x1b0: efbe0000     | 	.long 0xbeef
  0x1b4: efbe0000     | 	.long 0xbeef
  0x1b8: efbe0000     | 	.long 0xbeef
  0x1bc: efbe0000     | 	.long 0xbeef
  0x1c0: efbe0000     | 	.long 0xbeef
  0x1c4: efbe0000     | 	.long 0xbeef
  0x1c8: efbe0000     | 	.long 0xbeef
  0x1cc: efbe0000     | 	.long 0xbeef
  0x1d0: efbe0000     | 	.long 0xbeef
  0x1d4: efbe0000     | 	.long 0xbeef
  0x1d8: efbe0000     | 	.long 0xbeef
  0x1dc: efbe0000     | 	.long 0xbeef
  0x1e0: efbe0000     | 	.long 0xbeef
  0x1e4: efbe0000     | 	.long 0xbeef
  0x1e8: efbe0000     | 	.long 0xbeef
  0x1ec: efbe0000     | 	.long 0xbeef
  0x1f0: efbe0000     | 	.long 0xbeef
  0x1f4: efbe0000     | 	.long 0xbeef
  0x1f8: efbe0000     | 	.long 0xbeef
  0x1fc: efbe0000     | 	.long 0xbeef
  0x200: efbe0000     | 	.long 0xbeef
  0x204: efbe0000     | 	.long 0xbeef
  0x208: efbe0000     | 	.long 0xbeef
  0x20c: efbe0000     | 	.long 0xbeef
  0x210: efbe0000     | 	.long 0xbeef
  0x214: efbe0000     | 	.long 0xbeef
  0x218: efbe0000     | 	.long 0xbeef
  0x21c: efbe0000     | 	.long 0xbeef
  0x220: efbe0000     | 	.long 0xbeef
  0x224: efbe0000     | 	.long 0xbeef
  0x228: efbe0000     | 	.long 0xbeef
  0x22c: efbe0000     | 	.long 0xbeef
  0x230: efbe0000     | 	.long 0xbeef
  0x234: efbe0000     | 	.long 0xbeef
  0x238: efbe0000     | 	.long 0xbeef
  0x23c: efbe0000     | 	.long 0xbeef
  0x240: efbe0000     | 	.long 0xbeef
  0x244: efbe0000     | 	.long 0xbeef
  0x248: efbe0000     | 	.long 0xbeef
  0x24c: efbe0000     | 	.long 0xbeef
  0x250: efbe0000     | 	.long 0xbeef
  0x254: efbe0000     | 	.long 0xbeef
  0x258: efbe0000     | 	.long 0xbeef
  0x25c: efbe0000     | 	.long 0xbeef
  0x260: efbe0000     | 	.long 0xbeef
  0x264: efbe0000     | 	.long 0xbeef
  0x268: efbe0000     | 	.long 0xbeef
  0x26c: efbe0000     | 	.long 0xbeef
  0x270: efbe0000     | 	.long 0xbeef
  0x274: efbe0000     | 	.long 0xbeef
  0x278: efbe0000     | 	.long 0xbeef
  0x27c: efbe0000     | 	.long 0xbeef
  0x280: efbe0000     | 	.long 0xbeef
  0x284: efbe0000     | 	.long 0xbeef
  0x288: efbe0000     | 	.long 0xbeef
  0x28c: efbeadde     | 	.long 0xdeadbeef
                      | 
  0x290:              | .align 4
                      | # Run time stack
  0x290: 00000000     | 	.long 0
  0x294: 00000000     | 	.long 0
  0x298: 00000000     | 	.long 0
  0x29c: 00000000     | 	.long 0
  0x2a0: 00000000     | 	.long 0
  0x2a4: 00000000     | 	.long 0
  0x2a8: 00000000     | 	.long 0
  0x2ac: 00000000     | 	.long 0
  0x2b0: 00000000     | 	.long 0
  0x2b4: 00000000     | 	.long 0
  0x2b8:              | Stack:
